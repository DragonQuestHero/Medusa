<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{5639096A-A1A4-4B68-8991-133472F65E03}</ProjectGuid>
    <Keyword>QtVS_v304</Keyword>
    <QtMsBuild Condition="'$(QtMsBuild)'=='' OR !Exists('$(QtMsBuild)\qt.targets')">$(MSBuildProjectDirectory)\QtMsBuild</QtMsBuild>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt_defaults.props')">
    <Import Project="$(QtMsBuild)\qt_defaults.props" />
  </ImportGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="QtSettings">
    <QtInstall>Static-Qt5.7.1-x64</QtInstall>
    <QtModules>core;gui;widgets</QtModules>
    <QtBuildConfig>debug</QtBuildConfig>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="QtSettings">
    <QtInstall>Static-Qt5.7.1-x64</QtInstall>
    <QtModules>core;gui;widgets</QtModules>
    <QtBuildConfig>release</QtBuildConfig>
  </PropertyGroup>
  <Target Name="QtMsBuildNotFound" BeforeTargets="CustomBuild;ClCompile" Condition="!Exists('$(QtMsBuild)\qt.targets') or !Exists('$(QtMsBuild)\qt.props')">
    <Message Importance="High" Text="QtMsBuild: could not locate qt.targets, qt.props; project may not build correctly." />
  </Target>
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.props" />
  </ImportGroup>
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(QtMsBuild)\Qt.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(QtMsBuild)\Qt.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Link>
      <AdditionalDependencies>ntdll.lib;Shlwapi.lib;Bcrypt.lib;Version.lib;Zydis.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <UACExecutionLevel>AsInvoker</UACExecutionLevel>
      <AdditionalLibraryDirectories>$(SolutionDir)Medusa\Zydis\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <QtRcc>
      <RuntimeLibrary>
      </RuntimeLibrary>
    </QtRcc>
    <QtMoc>
      <RuntimeLibrary>
      </RuntimeLibrary>
    </QtMoc>
    <ClCompile />
    <ClCompile>
      <PreprocessorDefinitions>ZYDIS_STATIC_DEFINE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(SolutionDir)Medusa\Zydis\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Link>
      <AdditionalDependencies>ntdll.lib;Shlwapi.lib;Bcrypt.lib;Version.lib;Zydis.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <AdditionalLibraryDirectories>$(SolutionDir)Medusa\Zydis\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <ClCompile>
      <AdditionalIncludeDirectories>$(SolutionDir)Medusa\Zydis\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="Configuration">
    <ClCompile>
      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="Configuration">
    <ClCompile>
      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <DebugInformationFormat>None</DebugInformationFormat>
      <Optimization>MaxSpeed</Optimization>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="DLLInject.cc" />
    <ClCompile Include="Driver_Load.cc" />
    <ClCompile Include="EzPdb\EzPdb.cpp" />
    <ClCompile Include="FileCheck.cc" />
    <ClCompile Include="HookScanner.cc" />
    <ClCompile Include="Hypervisor.cc" />
    <ClCompile Include="IOCTLScanner.cc" />
    <ClCompile Include="KernelCallBackScanner.cc" />
    <ClCompile Include="KernelMemory.cc" />
    <ClCompile Include="KernelModules.cc" />
    <ClCompile Include="libpeconv\buffer_util.cpp" />
    <ClCompile Include="libpeconv\caves.cpp" />
    <ClCompile Include="libpeconv\delayed_imports_loader.cpp" />
    <ClCompile Include="libpeconv\exceptions_parser.cpp" />
    <ClCompile Include="libpeconv\exported_func.cpp" />
    <ClCompile Include="libpeconv\exports_lookup.cpp" />
    <ClCompile Include="libpeconv\exports_mapper.cpp" />
    <ClCompile Include="libpeconv\file_util.cpp" />
    <ClCompile Include="libpeconv\find_base.cpp" />
    <ClCompile Include="libpeconv\fix_dot_net_ep.cpp" />
    <ClCompile Include="libpeconv\fix_imports.cpp" />
    <ClCompile Include="libpeconv\function_resolver.cpp" />
    <ClCompile Include="libpeconv\hooks.cpp" />
    <ClCompile Include="libpeconv\imports_loader.cpp" />
    <ClCompile Include="libpeconv\imports_uneraser.cpp" />
    <ClCompile Include="libpeconv\load_config_util.cpp" />
    <ClCompile Include="libpeconv\peb_lookup.cpp" />
    <ClCompile Include="libpeconv\pe_dumper.cpp" />
    <ClCompile Include="libpeconv\pe_hdrs_helper.cpp" />
    <ClCompile Include="libpeconv\pe_loader.cpp" />
    <ClCompile Include="libpeconv\pe_mode_detector.cpp" />
    <ClCompile Include="libpeconv\pe_raw_to_virtual.cpp" />
    <ClCompile Include="libpeconv\pe_virtual_to_raw.cpp" />
    <ClCompile Include="libpeconv\relocate.cpp" />
    <ClCompile Include="libpeconv\remote_pe_reader.cpp" />
    <ClCompile Include="libpeconv\resource_parser.cpp" />
    <ClCompile Include="libpeconv\resource_util.cpp" />
    <ClCompile Include="libpeconv\tls_parser.cpp" />
    <ClCompile Include="libpeconv\util.cpp" />
    <ClCompile Include="ModuleExportFunc.cc" />
    <ClCompile Include="Modules.cc" />
    <ClCompile Include="PageTable.cc" />
    <ClCompile Include="PDBInfo.cc" />
    <ClCompile Include="PDBView.cc" />
    <ClCompile Include="Process.cc" />
    <ClCompile Include="StackWalk.cc" />
    <ClCompile Include="SymParser.cpp" />
    <ClCompile Include="Threads.cc" />
    <ClCompile Include="UserMemory.cc" />
    <ClCompile Include="UserMemoryList.cc" />
    <ClCompile Include="UserMemoryListKernel.cc" />
    <QtRcc Include="Medusa.qrc" />
    <QtUic Include="HookScanner.ui" />
    <QtMoc Include="Medusa.h" />
    <ClCompile Include="Medusa.cpp" />
    <ClCompile Include="main.cpp" />
    <QtUic Include="IOCTLScanner.ui" />
    <QtUic Include="Medusa.ui" />
    <QtUic Include="KernelMemory.ui" />
    <QtUic Include="ModuleExportFunc.ui" />
    <QtUic Include="PageTable.ui" />
    <QtUic Include="UserMemoryList.ui" />
    <QtUic Include="Modules.ui" />
    <QtUic Include="PDBView.ui" />
    <QtUic Include="StackWalk.ui" />
    <QtUic Include="Threads.ui" />
    <QtUic Include="UserMemory.ui" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="DLLInject.h" />
    <ClInclude Include="DLLInjectShellCode.h" />
    <ClInclude Include="Driver_Load.h" />
    <ClInclude Include="EzPdb\EzPdb.h" />
    <ClInclude Include="FileCheck.h" />
    <QtMoc Include="UserMemoryListKernel.h" />
    <QtMoc Include="ModuleExportFunc.h" />
    <QtMoc Include="PageTable.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="SymParser.h" />
    <QtMoc Include="UserMemoryList.h" />
    <QtMoc Include="UserMemory.h" />
    <QtMoc Include="StackWalk.h" />
    <QtMoc Include="Threads.h" />
    <QtMoc Include="HookScanner.h" />
    <ClInclude Include="Hypervisor.h" />
    <QtMoc Include="IOCTLScanner.h" />
    <QtMoc Include="KernelMemory.h" />
    <ClInclude Include="KernelCallBackScanner.h" />
    <ClInclude Include="KernelModules.h" />
    <ClInclude Include="libpeconv\fix_dot_net_ep.h" />
    <ClInclude Include="libpeconv\ntddk.h" />
    <ClInclude Include="libpeconv\peconv.h" />
    <QtMoc Include="Modules.h" />
    <ClInclude Include="ntdll.h" />
    <ClInclude Include="ntstatus.h" />
    <ClInclude Include="PDBInfo.h" />
    <QtMoc Include="PDBView.h" />
    <ClInclude Include="Process.h" />
  </ItemGroup>
  <ItemGroup>
    <MASM Include="asm64.asm">
      <FileType>Document</FileType>
    </MASM>
    <None Include="SysCall.asm" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="Medusa.rc" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="mywife.ico" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt.targets')">
    <Import Project="$(QtMsBuild)\qt.targets" />
  </ImportGroup>
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.targets" />
  </ImportGroup>
</Project>